@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
                <th>User</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.Value.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                    <td>@forecast.UserName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    //Stores the forecasts displayed in a list
    private List<WeatherForecastDTO> forecasts;

    //store a sin gle forecast:
     WeatherForecastDTO weatherForecastDTO = new WeatherForecastDTO();

    //Control if the popup is displayed:
    bool showPopup = false;

    //First methos to run when user vnavictaes to thi control
    protected override async Task OnInitializedAsync()
    {
        //forecasts = await Http.GetJsonAsync<WeatherForecast[]>("WeatherForecast");

        forecasts = await Http.GetJsonAsync<List<WeatherForecastDTO>>("api/WeatherForecast/GetAsync");
    }

}
